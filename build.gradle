group = 'org.to2mbn'
version = '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.gorylenko.gradle-git-properties'

buildscript {
	repositories {
		jcenter()
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://repo.spring.io/milestone' }
		maven { url 'https://plugins.gradle.org/m2/' }
	}
	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.BUILD-SNAPSHOT'
		classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17'
	}
}

repositories {
	jcenter()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

configurations {
	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-security'
	compile 'org.springframework.boot:spring-boot-starter-freemarker'
	compile 'org.springframework.boot:spring-boot-starter-mail'
	compile 'org.springframework.boot:spring-boot-starter-validation'
	compile 'org.springframework.boot:spring-boot-starter-log4j2'
	compile 'org.apache.logging.log4j:log4j-web'
	compile 'org.apache.commons:commons-text:1.1'
	compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
	compile 'commons-codec:commons-codec'
	compile 'mysql:mysql-connector-java'
	compile 'javax.xml.bind:jaxb-api:2.3.0' // https://jira.spring.io/browse/DATACMNS-1033
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
	manifest {
		attributes(
			'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher',
			'Implementation-Title': project.name,
			'Implementation-Version': project.version
		)
	}
	launchScript {
		properties(
			'initInfoProvides': 'akir',
			'initInfoShortDescription': 'akir',
			'initInfoDescription': 'akir'
		)
	}
}

springBoot {
	buildInfo()
}

task npmInit {
	doLast{
		exec {
			executable 'npm'
			args 'install', '.'
		}
	}
}

task npmTest {
	dependsOn npmInit
	doLast {
		exec {
			executable 'npm'
			args 'test'
		}
	}
}

check {
	dependsOn npmTest
}

task generateWeb {
	dependsOn npmTest
	doLast{
		exec {
			executable 'npm'
			args 'run', 'generate-js'
		}
		copy {
			from 'node_modules/three/build/three.min.js'
			from 'node_modules/skinview3d/build/skinview3d.babel.min.js'
			from 'node_modules/skinview3d/build/skinview3d.babel.min.js.map'
			from 'node_modules/jquery/dist/jquery.min.js'
			from 'node_modules/jquery/dist/jquery.min.js.map'
			from 'node_modules/bootstrap/dist/js/bootstrap.min.js'
			from 'node_modules/form-serializer/dist/jquery.serialize-object.min.js'
			from 'node_modules/bootstrap-validator/dist/validator.min.js'
			into 'build/generated-web/static/js'
		}
		copy {
			from 'node_modules/bootstrap/dist/css/bootstrap.min.css'
			from 'node_modules/bootstrap/dist/css/bootstrap.min.css.map'
			from 'node_modules/font-awesome/css/font-awesome.min.css'
			into 'build/generated-web/static/css'
		}
		copy {
			from 'node_modules/bootstrap/dist/fonts'
			from 'node_modules/font-awesome/fonts'
			include '**'
			into 'build/generated-web/static/fonts'
		}
	}
}

processResources {
	dependsOn generateWeb
	from('build/generated-web')
}
